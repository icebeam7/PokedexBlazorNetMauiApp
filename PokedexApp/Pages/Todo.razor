@page "/todo"
@using PokedexApp.Data;
@using Microsoft.Maui.Storage;
@using System.IO;
@using System.Text.Json;

<h3>Todo (@todos.Count(t => !t.IsDone))</h3>

<button @onclick="Save">Save</button>
<button @onclick="Load">Load</button>

<input placeholder="Something to do" @bind="newTodo" />
<button @onclick="AddTodo">Add item</button>

<!--
<MudButton Variant="Variant.Filled"
           Color="Color.Primary" @onclick="Save">Save</MudButton>

<MudButton Variant="Variant.Filled"
           Color="Color.Success" @onclick="Load">Load</MudButton>

<MudTextField @bind-Value="@newTodo" Label="Something to do" 
    HelperText="Type something" Variant="Variant.Outlined" />

<MudButton Variant="Variant.Filled"
           Color="Color.Warning" @onclick="AddTodo">Add item</MudButton>

-->

<br />
<br />

<ul class="list-unstyled">
    @foreach (var item in todos)
    {
        <li>
            <input type="checkbox" @bind="item.IsDone"/>
            <input @bind="item.Title"/>
        </li>
    }
</ul>

@code {
    private List<TodoItem> todos = new();
    private string? newTodo;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }

    private string path = Path.Combine(FileSystem.AppDataDirectory, "todo.json");

    private async Task Save()
    {
        var contents = JsonSerializer.Serialize(todos);
        File.WriteAllText(path, contents);

        await App.Current.MainPage.DisplayAlert("List Saved", 
            $"List has been saved to {path}", "OK");
    }

    private async Task Load()
    {
        if (!File.Exists(path))
            return;

        var contents = File.ReadAllText(path);
        var savedItems = JsonSerializer.Deserialize<List<TodoItem>>(contents);

        todos.Clear();
        todos.AddRange(savedItems);

        await App.Current.MainPage.DisplayAlert("List Loaded",
            $"List has been loaded from files", "OK");
    }
}
